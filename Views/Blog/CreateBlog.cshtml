@model HotelBooking.Models.Blog

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Blog</h4>
<hr />
<head>
    <!-- Place the first <script> tag in your HTML's <head> -->
<script src="https://cdn.tiny.cloud/1/8rbwilvuf0avi9crpddcz9wxkam5b2klisbezg2qn8qldhsw/tinymce/7/tinymce.min.js" referrerpolicy="origin"></script>

<!-- Place the following <script> and <textarea> tags your HTML's <body> -->
<script>
  tinymce.init({
    selector: 'textarea',
    plugins: [
      // Core editing features
      'anchor', 'autolink', 'charmap', 'codesample', 'emoticons', 'image', 'link', 'lists', 'media', 'searchreplace', 'table', 'visualblocks', 'wordcount',
      // Your account includes a free trial of TinyMCE premium features
      // Try the most popular premium features until Oct 11, 2024:
      'checklist', 'mediaembed', 'casechange', 'export', 'formatpainter', 'pageembed', 'a11ychecker', 'tinymcespellchecker', 'permanentpen', 'powerpaste', 'advtable', 'advcode', 'editimage', 'advtemplate', 'ai', 'mentions', 'tinycomments', 'tableofcontents', 'footnotes', 'mergetags', 'autocorrect', 'typography', 'inlinecss', 'markdown',
    ],
    toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table mergetags | addcomment showcomments | spellcheckdialog a11ycheck typography | align lineheight | checklist numlist bullist indent outdent | emoticons charmap | removeformat',
    tinycomments_mode: 'embedded',
    tinycomments_author: 'Author name',
    mergetags_list: [
      { value: 'First.Name', title: 'First Name' },
      { value: 'Email', title: 'Email' },
    ],
    ai_request: (request, respondWith) => respondWith.string(() => Promise.reject('See docs to implement AI Assistant')),
  });
</script>

</head>
<body>
    <div class="row">
    <div class="col-md-4">
        <form asp-action="CreateBlog" method="post" id="productForm">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Content" class="control-label"></label>
                <textarea asp-for="Content" id="textarea" class="form-control"></textarea>
                <span asp-validation-for="Content" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="BriefInfor" class="control-label"></label>
                <input asp-for="BriefInfor" class="form-control" />
                <span asp-validation-for="BriefInfor" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Status" class="control-label"></label>
                <input asp-for="Status" class="form-control" />
                <span asp-validation-for="Status" class="text-danger"></span>
            </div>
                <input type="hidden" asp-for="Thumbnail" id="ProductImageUrl" />

                <input type="file" id="photo" />
                <span asp-validation-for="Thumbnail" class="text-danger"></span>

            <button type="button" id="uploadAndSubmit" class="btn btn-primary">Upload and Submit</button>
        </form>
    </div>
</div>


</body>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script src="https://www.gstatic.com/firebasejs/7.7.0/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/7.7.0/firebase-storage.js"></script>
    <script>
        // Your Firebase configuration
        const firebaseConfig = {
            apiKey: "AIzaSyAcQVo6V1PFQvm9m298zKlaeZJR7bS2Paw",
            authDomain: "image-upload-62189.firebaseapp.com",
            databaseURL: "https://image-upload-62189-default-rtdb.firebaseio.com",
            projectId: "image-upload-62189",
            storageBucket: "image-upload-62189.appspot.com",
            messagingSenderId: "451832402315",
            appId: "1:451832402315:web:ced11b67eb5433ce269f8e",
            measurementId: "G-VX4F3HFQZY"
        };

        // Initialize Firebase
        firebase.initializeApp(firebaseConfig);

        document.getElementById('uploadAndSubmit').addEventListener('click', function () {
            const ref = firebase.storage().ref();
            const file = document.querySelector("#photo").files[0];
            const name = +new Date() + "-" + file.name;
            const metadata = {
                contentType: file.type
            };

            ref.child(name).put(file, metadata)
                .then(snapshot => snapshot.ref.getDownloadURL())
                .then(url => {
                    console.log(url);
                    document.querySelector("#ProductImageUrl").value = url;
                    document.querySelector("#productForm").submit();
                })
                .catch(console.error);
        });
    </script>
}
